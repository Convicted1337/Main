local API = {}

local HttpService = game:GetService("HttpService")

API.token = 'ATTA733a225dbf8cf4fb3f188e770be3060c5ef761857dc43dc47b0f8280d4c323fb77052D25'
API.addon = '9e291d80ce8ef8ce624278623c5ddd4a'

function API:SetAddon(token)
	if token and token ~= "" then
		API.token = token
		API.addon = "?key=06f2e8fbe9e70e2d8becb80c9d452df3&token="..token
		return API
	else
		error([[-Instructions:
		1. Go to this link and click allow: https://trello.com/1/authorize?key=YOUR_TRELLO_API_KEY_HERE&name=Roblox+Api&expiration=never&response_type=token&scope=read,write
		1.1. (short link: https://goo.gl/rN5ngB) 
		2. Copy the token from the page sent to you
		3. Trigger the function SetAddon with the token after requiring the API
		3.1. Example: API:SetAddon(token)]])
	end
end

function API:PostComment(cardId, text)
	local url = "https://api.trello.com/1/cards/" .. cardId .. "/actions/comments" .. API.addon
	local postData = HttpService:JSONEncode({ text = text })
	local response = request({
		Url = url,
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json"
		},
		Body = postData
	})
	return HttpService:JSONDecode(response.Body)
end

function API:GetCardsInList(listId)
	local url = "https://api.trello.com/1/lists/" .. listId .. "/cards" .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	return HttpService:JSONDecode(response.Body)
end

function API:AddLabel(name, color, boardId)
	local url = "https://api.trello.com/1/labels" .. API.addon
	local postData = HttpService:JSONEncode({
		name = name,
		color = color,
		idBoard = boardId
	})
	local response = request({
		Url = url,
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json"
		},
		Body = postData
	})
	return HttpService:JSONDecode(response.Body).id
end

function API:GetBoardNameFromId(boardId)
	local url = "https://api.trello.com/1/boards/" .. boardId .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	local data = HttpService:JSONDecode(response.Body)
	return data.name
end

function API:GetAllBoards()
	local url = "https://api.trello.com/1/members/me/boards" .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	local data = HttpService:JSONDecode(response.Body)
	return data.idBoards
end

function API:AddCardLabel(cardId, labelId)
	local url = "https://api.trello.com/1/cards/" .. cardId .. "/idLabels" .. API.addon
	local postData = HttpService:JSONEncode({
		value = labelId
	})
	local response = request({
		Url = url,
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json"
		},
		Body = postData
	})
	return HttpService:JSONDecode(response.Body)
end

function API:GetCardID(name, boardId)
	local url = "https://api.trello.com/1/boards/" .. boardId .. "/cards" .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	local cards = HttpService:JSONDecode(response.Body)
	for _, card in ipairs(cards) do
		if card.name == name then
			return card.id
		end
	end
end

function API:GetCardInfo(cardId)
	local url = "https://api.trello.com/1/cards/" .. cardId .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	return HttpService:JSONDecode(response.Body)
end

function API:GetBoardInfo(boardId)
	local url = "https://api.trello.com/1/boards/" .. boardId .. "?lists=all&cards=all&card_checklists=all&labels=all&memberships=all&members=all&membersInvited=all&checklists=all&organization_memberships=all&fields=all" .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	return HttpService:JSONDecode(response.Body)
end

function API:GetLists(boardId)
	local url = "https://api.trello.com/1/boards/" .. boardId .. "/lists" .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	return HttpService:JSONDecode(response.Body)
end

function API:GetMemberBoards(memberName)
	local url = "https://api.trello.com/1/members/" .. memberName .. "/boards" .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	return HttpService:JSONDecode(response.Body)
end

function API:GetBoardMembers(boardId)
	local url = "https://api.trello.com/1/boards/" .. boardId .. "/members" .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	return HttpService:JSONDecode(response.Body)
end

function API:CreateBoard(name, ...)
	local options = { ... }
	local postData = {
		name = name
	}
	for i, v in ipairs(options) do
		if i == 1 then
			postData.desc = v
		elseif i == 2 then
			postData.prefs_permissionLevel = v
		end
	end
	local url = "https://api.trello.com/1/boards" .. API.addon
	local response = request({
		Url = url,
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json"
		},
		Body = HttpService:JSONEncode(postData)
	})
	return HttpService:JSONDecode(response.Body)
end

function API:GetBoardID(name)
	local url = "https://api.trello.com/1/members/me/boards" .. API.addon
	local response = request({
		Url = url,
		Method = "GET",
	})
	local boards = HttpService:JSONDecode(response.Body)
	for _, board in ipairs(boards) do
		if board.name == name then
			return board.id
		end
	end
	error(name .. " not found!")
end

function API:AddCard(...)
	local args = { ... }
	local postData = {}
	if #args == 3 then
		postData = {
			name = args[1],
			desc = args[2],
			idList = args[3],
			urlSource = nil,
			due = nil
		}
	elseif #args == 4 then
		postData = {
			name = args[1],
			desc = args[2],
			idList = args[3],
			urlSource = args[4],
			due = nil
		}
	elseif #args == 5 then
		postData = {
			name = args[1],
			desc = args[2],
			idList = args[3],
			urlSource = args[4],
			pos = args[5],
			due = nil
		}
	elseif #args == 6 then
		postData = {
			name = args[1],
			desc = args[2],
			idList = args[3],
			urlSource = args[4],
			pos = args[5],
			due = args[6]
		}
	elseif #args == 7 then
		postData = {
			name = args[1],
			desc = args[2],
			idList = args[3],
			urlSource = args[4],
			pos = args[5],
			due = args[6],
			labels = args[7]
		}
	elseif #args == 8 then
		postData = {
			name = args[1],
			desc = args[2],
			idList = args[3],
			urlSource = args[4],
			pos = args[5],
			due = args[6],
			labels = args[7],
			idCardSource = args[8]
		}
	else
		error("Invalid number of arguments.")
	end
	local url = "https://api.trello.com/1/cards" .. API.addon
	local response = request({
		Url = url,
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json"
		},
		Body = HttpService:JSONEncode(postData)
	})
	return HttpService:JSONDecode(response.Body)
end

function API:AddCustomCard(array, listId)
	if array["due"] == nil then
		array["due"] = nil
	end
	if array["urlSource"] == nil then
		array["urlSource"] = nil
	end
	array["idList"] = listId
	local url = "https://api.trello.com/1/cards" .. API.addon
	local response = request({
		Url = url,
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json"
		},
		Body = HttpService:JSONEncode(array)
	})
	return HttpService:JSONDecode(response.Body)
end

return API
